{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "hello",
						"type": "string"
					}
				],
				"name": "Hello",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "unsignedInteger",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "this is a contract to learn functions, contract state and return values in solidity. Create a contract that contains 2 functions: one has to modify the contract state and the other one has to return a value one of them has to emit an event at the end, you need to compile and deploy the contract using remix check in the remix logs the event that you emitted",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/2_Functions.sol": "Functions"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/2_Functions.sol": {
			"keccak256": "0xf9421990a0160224e791f26b8cb14a76306c073dfe409bb1f72d0c78a5fe77e7",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://9d1cabad0108d48c90e407b1d431eee00ae0fc7180771be51d119475332084b4",
				"dweb:/ipfs/Qmf6vg3dXZuqoCpcaEoAEYxMRrzuF9WHbQjmXQ5v7rPFP5"
			]
		}
	},
	"version": 1
}